{"version":3,"sources":["Components/Login.js","Components/Register.js","Components/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","state","email","password","messageEmail","messagePassword","handleEmail","bind","handlePassword","e","this","setState","target","value","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","response","error","message","formError","admin","setUsers","users","changeState","setUser","user","history","push","catch","console","id","htmlFor","onChange","className","type","placeholder","name","required","onClick","handleLogin","to","React","Component","regexEmail","formValid","formErrors","valid","Object","values","forEach","err","length","Register","handleSumbit","preventDefault","log","firstName","lastName","handleChange","test","Welcome","handleAdminAdd","updateEmail","handleAdminChange","handleAdminRemove","updatedUsers","index","findIndex","obj","loggedIn","map","key","App","prevState","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8c61685.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tmessageEmail: '',\r\n\t\t\tmessagePassword: ''\r\n\t\t};\r\n\t\tthis.handleEmail = this.handleEmail.bind(this);\r\n\t\tthis.handlePassword = this.handlePassword.bind(this);\r\n\t}\r\n\thandleEmail(e) {\r\n\t\tthis.setState({\r\n\t\t\temail: e.target.value,\r\n\t\t\tmessageEmail: ''\r\n\t\t});\r\n\t}\r\n\r\n\thandlePassword(e) {\r\n\t\tthis.setState({\r\n\t\t\tpassword: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\thandleLogin() {\r\n\t\tif (this.state.email === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmessageEmail: 'Please fill out these fields'\r\n\t\t\t});\r\n\t\t} else if (this.state.password === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tmessagePassword: 'Please fill out these fields'\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tfetch('http://localhost:8080/login', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\temail: this.state.email,\r\n\t\t\t\t\tpassword: this.state.password\r\n\t\t\t\t}),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then((res) => res.json())\r\n\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tif (response.error === true) {\r\n\t\t\t\t\t\tif (response.message === 'Invalid password') {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tmessagePassword: response.message,\r\n\t\t\t\t\t\t\t\tmessageEmail: '',\r\n\t\t\t\t\t\t\t\tformError: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (response.message === 'User does not exist') {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tmessageEmail: response.message,\r\n\t\t\t\t\t\t\t\tmessagePassword: ''\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (response.admin) {\r\n\t\t\t\t\t\t\tthis.props.setUsers(response.users);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.props.changeState();\r\n\r\n\t\t\t\t\t\tthis.props.setUser(response.user);\r\n\r\n\t\t\t\t\t\tthis.props.history.push('/welcome');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.error('Error:', error));\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id='main-container'>\r\n\t\t\t\t<div id='login-container'>\r\n\t\t\t\t\t<label id='label-id' htmlFor='uname'>\r\n\t\t\t\t\t\tUsername\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={this.handleEmail}\r\n\t\t\t\t\t\tclassName='input-field'\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='Enter email'\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<div className='errorHandle'>{this.state.messageEmail}</div>\r\n\r\n\t\t\t\t\t<label id='label-id' htmlFor='uname'>\r\n\t\t\t\t\t\tPassword\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={this.handlePassword}\r\n\t\t\t\t\t\tclassName='input-field'\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='Enter Password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<div className='errorHandle'>\r\n\t\t\t\t\t\t{this.state.messagePassword}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='btn-container-two'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='login-user'\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tonClick={() => this.handleLogin()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div id='btn-contain'>\r\n\t\t\t\t\t\t\t<label id='labelsecond' htmlFor='newuser'>\r\n\t\t\t\t\t\t\t\tNew User\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<button id='register-btn' type='submit'>\r\n\t\t\t\t\t\t\t\t<Link to='/register'>Register</Link>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst regexEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n\r\nconst formValid = formErrors => {\r\n  let valid = true;\r\n  Object.values(formErrors).forEach(err => {\r\n    if (err.length > 0) {\r\n      valid = false;\r\n    }\r\n  });\r\n  return valid;\r\n};\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      admin: \"\",\r\n      formErrors: {\r\n        firstName: \"*Field Required\",\r\n        lastName: \"*Field Required\",\r\n        email: \"*Field Required\",\r\n        password: \"*Field Required\"\r\n      }\r\n    };\r\n  }\r\n\r\n  handleSumbit = e => {\r\n    e.preventDefault();\r\n    if (formValid(this.state.formErrors)) {\r\n      console.log(\r\n        `--submitting--\r\n        firstName: ${this.state.firstName}\r\n        lastName: ${this.state.lastName}\r\n        email: ${this.state.email}\r\n        password: ${this.state.password}\r\n        `\r\n      );\r\n      fetch(\"http://localhost:8080/register\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          firstName: this.state.firstName,\r\n          lastName: this.state.lastName,\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n          admin: this.state.admin\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(response => {\r\n          console.log(\"Success:\", console.log(response));\r\n          this.props.history.push(\"/login\");\r\n        })\r\n        .catch(error => console.error(\"Error:\", error));\r\n    } else {\r\n      console.log(\"Form invalid\");\r\n    }\r\n  };\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = this.state.formErrors;\r\n\r\n    switch (name) {\r\n      case \"firstName\":\r\n        formErrors.firstName =\r\n          value.length === 0\r\n            ? \"Field required\"\r\n            : value.length < 3\r\n            ? \"minimum 3 characters required\"\r\n            : \"\";\r\n        break;\r\n      case \"lastName\":\r\n        formErrors.lastName =\r\n          value.length === 0\r\n            ? \"Field required\"\r\n            : value.length < 3\r\n            ? \"minimum 3 characters required\"\r\n            : \"\";\r\n        break;\r\n      case \"email\":\r\n        formErrors.email =\r\n          value.length === 0\r\n            ? \"Field required\"\r\n            : regexEmail.test(value) && value.length > 0\r\n            ? \"\"\r\n            : \"Invalid email\";\r\n\r\n        break;\r\n      case \"password\":\r\n        formErrors.password =\r\n          value.length === 0\r\n            ? \"Field required\"\r\n            : value.length < 6\r\n            ? \"minimum 6 characters required\"\r\n            : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({\r\n      formErrors,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n    return (\r\n      <div id=\"main-container\">\r\n        <div id=\"login-container\">\r\n          <div className=\"input-container\">\r\n            <label id=\"label-id\" htmlFor=\"firstname\">\r\n              First name\r\n            </label>\r\n\r\n            <input\r\n              onChange={this.handleChange}\r\n              className=\"input-field\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Username\"\r\n              name=\"firstName\"\r\n              required=\"required\"\r\n            ></input>\r\n            {formErrors.firstName.length > 0 && (\r\n              <span className=\"formErrors\">{formErrors.firstName}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"input-container\">\r\n            <label id=\"label-id\" htmlFor=\"lastName\">\r\n              Last name\r\n            </label>\r\n\r\n            <input\r\n              onChange={this.handleChange}\r\n              className=\"input-field\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Lastname\"\r\n              name=\"lastName\"\r\n              required=\"required\"\r\n            ></input>\r\n            {formErrors.lastName.length > 0 && (\r\n              <span className=\"formErrors\">{formErrors.lastName}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label id=\"label-id\" htmlFor=\"email\">\r\n              email\r\n            </label>\r\n\r\n            <input\r\n              onChange={this.handleChange}\r\n              className=\"input-field\"\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              name=\"email\"\r\n              required=\"required\"\r\n            ></input>\r\n            {formErrors.email.length > 0 && (\r\n              <span className=\"formErrors\">{formErrors.email}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"input-container\">\r\n            <label id=\"label-id\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n\r\n            <input\r\n              onChange={this.handleChange}\r\n              className=\"input-field\"\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              name=\"password\"\r\n              required=\"required\"\r\n            ></input>\r\n            {formErrors.password.length > 0 && (\r\n              <span className=\"formErrors\">{formErrors.password}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"btn-container\">\r\n            <button id=\"login-btn\" type=\"submit\" onClick={this.handleSumbit}>\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Register;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Welcome(props) {\r\n\tfunction handleLogout() {\r\n\t\tprops.changeState();\r\n\t}\r\n\t// const [, setadmin] = useState(null);\r\n\tfunction handleAdminAdd(e) {\r\n\t\tlet updateEmail = e.target.value;\r\n\t\tfetch('http://localhost:8080/admin/add', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: updateEmail\r\n\t\t\t}),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\thandleAdminChange(updateEmail);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.error('Error:', error));\r\n\t}\r\n\tfunction handleAdminRemove(e) {\r\n\t\tlet updateEmail = e.target.value;\r\n\t\tfetch('http://localhost:8080/admin/remove', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: updateEmail\r\n\t\t\t}),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((response) => {\r\n\t\t\t\thandleAdminChange(updateEmail);\r\n\t\t\t})\r\n\t\t\t.catch((error) => console.error('Error:', error));\r\n\t}\r\n\tfunction handleAdminChange(updateEmail) {\r\n\t\tlet updatedUsers = props.users;\r\n\t\tlet index = updatedUsers.findIndex((obj) => obj.email === updateEmail);\r\n\t\tupdatedUsers[index].admin = !updatedUsers[index].admin;\r\n\t\tprops.setUsers(updatedUsers);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.loggedIn ? (\r\n\t\t\t\t<div className='welcome-page'>\r\n\t\t\t\t\t<h1 id='welcome-msg'>\r\n\t\t\t\t\t\tWelcome to NOBROKER,{' '}\r\n\t\t\t\t\t\t{props.user.firstName + ' ' + props.user.lastName}\r\n\t\t\t\t\t</h1>\r\n\r\n\t\t\t\t\t<div id='btn-container'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='logout-btn'\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tonClick={handleLogout}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{props.user.admin ? (\r\n\t\t\t\t\t\t<div id='table-container'>\r\n\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr id='header'>\r\n\t\t\t\t\t\t\t\t\t\t<th>First name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Last name</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t\t\t\t\t<th>Add admin</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t\t\t{props.users.map((obj, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{obj.firstName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{obj.lastName}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{obj.email}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{obj.admin ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='make-admin-btn'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={obj.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAdminRemove\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='make-admin-btn'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={obj.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAdminAdd\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Redirect to='/login' />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Welcome;\r\n","import React from 'react';\nimport './App.css';\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport Welcome from './Components/Welcome';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloggedIn: false,\n\t\t\tadmin: null,\n\t\t\tusers: null,\n\t\t\tuser: null\n\t\t};\n\t\tthis.changeState = this.changeState.bind(this);\n\t\tthis.setUsers = this.setUsers.bind(this);\n\t\tthis.setUser = this.setUser.bind(this);\n\t}\n\tchangeState() {\n\t\tthis.setState((prevState) => {\n\t\t\treturn { loggedIn: !prevState.loggedIn };\n\t\t});\n\t}\n\n\tsetUsers(users) {\n\t\tthis.setState({\n\t\t\tusers\n\t\t});\n\t}\n\n\tsetUser(user) {\n\t\tthis.setState({\n\t\t\tuser\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\tsetUsers={(users) => this.setUsers(users)}\n\t\t\t\t\t\t\t\t\tsetUser={(user) => this.setUser(user)}\n\t\t\t\t\t\t\t\t\tchangeState={this.changeState}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath='/Login'\n\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t<Login\n\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\tsetUsers={(users) => this.setUsers(users)}\n\t\t\t\t\t\t\t\t\tsetUser={(user) => this.setUser(user)}\n\t\t\t\t\t\t\t\t\tchangeState={this.changeState}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path='/register' component={Register} />\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath='/Welcome'\n\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t<Welcome\n\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\tchangeState={this.changeState}\n\t\t\t\t\t\t\t\t\tloggedIn={this.state.loggedIn}\n\t\t\t\t\t\t\t\t\tuser={this.state.user}\n\t\t\t\t\t\t\t\t\tusers={this.state.users}\n\t\t\t\t\t\t\t\t\tsetUsers={(users) => this.setUsers(users)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}